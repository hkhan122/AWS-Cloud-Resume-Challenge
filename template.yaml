AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Cloud Resume Challenge - Resume Site + Visitor Counter

Globals:
  Function:
    Timeout: 5
    Runtime: python3.12
    MemorySize: 128

Parameters:
  DomainName:
    Type: String
    Description: Root domain 
  HostedZoneId:
    Type: String
    Description: Route53 Hosted Zone ID for the domain
  CertificateArn:
    Type: String
    Description: ACM certificate ARN (must be in us-east-1 for CloudFront)

Resources:
  # DynamoDB table for visitor count
  VisitorTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: VisitorCount
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  # Lambda function for visitor counter
  VisitorCounterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: VisitorCounter
      Handler: lambda_function.lambda_handler
      CodeUri: backend/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: VisitorCount
      Environment:
        Variables:
          TABLE_NAME: VisitorCount
      Events:
        VisitorApi:
          Type: Api
          Properties:
            Path: /visitors
            Method: get

  # S3 bucket for website
  ResumeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${DomainName}-resume-site"
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  # Cloudfront OAI
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "OAI for resume site"

  # Bucket Policy
  ResumeBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ResumeBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudFrontOAIRead
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action: "s3:GetObject"
            Resource: !Sub "${ResumeBucket.Arn}/*"

  # CloudFront distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Aliases:
          - !Ref DomainName
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
        Origins:
          - Id: ResumeSiteOrigin
            DomainName: !GetAtt ResumeBucket.RegionalDomainName
            S3OriginConfig:  
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        DefaultCacheBehavior:
          TargetOriginId: ResumeSiteOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: ["GET", "HEAD"]
          CachedMethods: ["GET", "HEAD"]
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: true

  # Route53 record to point domain to CloudFront
  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  

Outputs:
  WebsiteURL:
    Value: !Sub "https://${DomainName}"
    Description: URL of your resume site
  ApiURL:
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/visitors"
    Description: API endpoint for visitor counter
